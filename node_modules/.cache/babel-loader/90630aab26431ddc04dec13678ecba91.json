{"ast":null,"code":"import { deepExtend } from \"../../../../Utils/Utils\";\nexport class Shape {\n  constructor() {\n    this.options = {};\n    this.type = \"circle\";\n  }\n\n  get character() {\n    var _a;\n\n    return (_a = this.options[\"character\"]) !== null && _a !== void 0 ? _a : this.options[\"char\"];\n  }\n\n  set character(value) {\n    this.options[\"character\"] = value;\n    this.options[\"char\"] = value;\n  }\n\n  get custom() {\n    return this.options;\n  }\n\n  set custom(value) {\n    this.options = value;\n  }\n\n  get image() {\n    var _a;\n\n    return (_a = this.options[\"image\"]) !== null && _a !== void 0 ? _a : this.options[\"images\"];\n  }\n\n  set image(value) {\n    this.options[\"image\"] = value;\n    this.options[\"images\"] = value;\n  }\n\n  get images() {\n    return this.image;\n  }\n\n  set images(value) {\n    this.image = value;\n  }\n\n  get polygon() {\n    var _a;\n\n    return (_a = this.options[\"polygon\"]) !== null && _a !== void 0 ? _a : this.options[\"star\"];\n  }\n\n  set polygon(value) {\n    this.options[\"polygon\"] = value;\n    this.options[\"star\"] = value;\n  }\n\n  get stroke() {\n    return [];\n  }\n\n  set stroke(_value) {}\n\n  load(data) {\n    var _a, _b, _c;\n\n    if (!data) {\n      return;\n    }\n\n    const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n\n    if (options !== undefined) {\n      for (const shape in options) {\n        const item = options[shape];\n\n        if (item) {\n          this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n        }\n      }\n    }\n\n    this.loadShape(data.character, \"character\", \"char\", true);\n    this.loadShape(data.polygon, \"polygon\", \"star\", false);\n    this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, \"image\", \"images\", true);\n\n    if (data.type !== undefined) {\n      this.type = data.type;\n    }\n  }\n\n  loadShape(item, mainKey, altKey, altOverride) {\n    var _a, _b;\n\n    if (!item) {\n      return;\n    }\n\n    const emptyValue = item instanceof Array ? [] : {},\n          mainDifferentValues = item instanceof Array !== this.options[mainKey] instanceof Array,\n          altDifferentValues = item instanceof Array !== this.options[altKey] instanceof Array;\n\n    if (mainDifferentValues) {\n      this.options[mainKey] = emptyValue;\n    }\n\n    if (altDifferentValues && altOverride) {\n      this.options[altKey] = emptyValue;\n    }\n\n    this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n\n    if (!this.options[altKey] || altOverride) {\n      this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n    }\n  }\n\n}","map":{"version":3,"names":["deepExtend","Shape","constructor","options","type","character","_a","value","custom","image","images","polygon","stroke","_value","load","data","_b","_c","undefined","shape","item","loadShape","mainKey","altKey","altOverride","emptyValue","Array","mainDifferentValues","altDifferentValues"],"sources":["/home/brayanmezac/Descargas/drones-react/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js"],"sourcesContent":["import { deepExtend } from \"../../../../Utils/Utils\";\nexport class Shape {\n    constructor() {\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[\"character\"]) !== null && _a !== void 0 ? _a : this.options[\"char\"]);\n    }\n    set character(value) {\n        this.options[\"character\"] = value;\n        this.options[\"char\"] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[\"image\"]) !== null && _a !== void 0 ? _a : this.options[\"images\"]);\n    }\n    set image(value) {\n        this.options[\"image\"] = value;\n        this.options[\"images\"] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[\"polygon\"]) !== null && _a !== void 0 ? _a : this.options[\"star\"]);\n    }\n    set polygon(value) {\n        this.options[\"polygon\"] = value;\n        this.options[\"star\"] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, \"character\", \"char\", true);\n        this.loadShape(data.polygon, \"polygon\", \"star\", false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, \"image\", \"images\", true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b;\n        if (!item) {\n            return;\n        }\n        const emptyValue = item instanceof Array ? [] : {}, mainDifferentValues = item instanceof Array !== this.options[mainKey] instanceof Array, altDifferentValues = item instanceof Array !== this.options[altKey] instanceof Array;\n        if (mainDifferentValues) {\n            this.options[mainKey] = emptyValue;\n        }\n        if (altDifferentValues && altOverride) {\n            this.options[altKey] = emptyValue;\n        }\n        this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n        if (!this.options[altKey] || altOverride) {\n            this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}