{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Canvas_colorPlugins, _Canvas_context, _Canvas_postDrawUpdaters, _Canvas_preDrawUpdaters, _Canvas_resizePlugins;\n\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { deepExtend } from \"../Utils/Utils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\n\nfunction setTransformValue(factor, newFactor, key) {\n  var _a;\n\n  const newValue = newFactor[key];\n\n  if (newValue !== undefined) {\n    factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n  }\n}\n\nexport class Canvas {\n  constructor(container) {\n    this.container = container;\n\n    _Canvas_colorPlugins.set(this, void 0);\n\n    _Canvas_context.set(this, void 0);\n\n    _Canvas_postDrawUpdaters.set(this, void 0);\n\n    _Canvas_preDrawUpdaters.set(this, void 0);\n\n    _Canvas_resizePlugins.set(this, void 0);\n\n    this.size = {\n      height: 0,\n      width: 0\n    };\n\n    __classPrivateFieldSet(this, _Canvas_context, null, \"f\");\n\n    this.generatedCanvas = false;\n\n    __classPrivateFieldSet(this, _Canvas_preDrawUpdaters, [], \"f\");\n\n    __classPrivateFieldSet(this, _Canvas_postDrawUpdaters, [], \"f\");\n\n    __classPrivateFieldSet(this, _Canvas_resizePlugins, [], \"f\");\n\n    __classPrivateFieldSet(this, _Canvas_colorPlugins, [], \"f\");\n  }\n\n  clear() {\n    const options = this.container.actualOptions,\n          trail = options.particles.move.trail;\n\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n    } else {\n      this.draw(ctx => {\n        clear(ctx, this.size);\n      });\n    }\n  }\n\n  destroy() {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    } else {\n      this.resetOriginalStyle();\n    }\n\n    this.draw(ctx => {\n      clear(ctx, this.size);\n    });\n\n    __classPrivateFieldSet(this, _Canvas_preDrawUpdaters, [], \"f\");\n\n    __classPrivateFieldSet(this, _Canvas_postDrawUpdaters, [], \"f\");\n\n    __classPrivateFieldSet(this, _Canvas_resizePlugins, [], \"f\");\n\n    __classPrivateFieldSet(this, _Canvas_colorPlugins, [], \"f\");\n  }\n\n  draw(cb) {\n    if (!__classPrivateFieldGet(this, _Canvas_context, \"f\")) {\n      return;\n    }\n\n    return cb(__classPrivateFieldGet(this, _Canvas_context, \"f\"));\n  }\n\n  drawParticle(particle, delta) {\n    var _a;\n\n    if (particle.spawning || particle.destroyed) {\n      return;\n    }\n\n    const radius = particle.getRadius();\n\n    if (radius <= 0) {\n      return;\n    }\n\n    const pfColor = particle.getFillColor(),\n          psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n    let [fColor, sColor] = this.getPluginParticleColors(particle);\n\n    if (!fColor) {\n      fColor = pfColor;\n    }\n\n    if (!sColor) {\n      sColor = psColor;\n    }\n\n    if (!fColor && !sColor) {\n      return;\n    }\n\n    this.draw(ctx => {\n      var _a, _b, _c, _d, _e;\n\n      const options = this.container.actualOptions,\n            zIndexOptions = particle.options.zIndex,\n            zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate,\n            opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1,\n            strokeOpacity = (_e = (_d = particle.stroke) === null || _d === void 0 ? void 0 : _d.opacity) !== null && _e !== void 0 ? _e : opacity,\n            zOpacity = opacity * zOpacityFactor,\n            zStrokeOpacity = strokeOpacity * zOpacityFactor,\n            transform = {},\n            colorStyles = {\n        fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n      };\n      colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n      this.applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n      drawParticle({\n        container: this.container,\n        context: ctx,\n        particle,\n        delta,\n        colorStyles,\n        backgroundMask: options.backgroundMask.enable,\n        composite: options.backgroundMask.composite,\n        radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n        opacity: zOpacity,\n        shadow: particle.options.shadow,\n        transform\n      });\n      this.applyPostDrawUpdaters(particle);\n    });\n  }\n\n  drawParticlePlugin(plugin, particle, delta) {\n    this.draw(ctx => {\n      drawParticlePlugin(ctx, plugin, particle, delta);\n    });\n  }\n\n  drawPlugin(plugin, delta) {\n    this.draw(ctx => {\n      drawPlugin(ctx, plugin, delta);\n    });\n  }\n\n  init() {\n    this.resize();\n    this.initStyle();\n    this.initCover();\n    this.initTrail();\n    this.initBackground();\n    this.initUpdaters();\n    this.initPlugins();\n    this.paint();\n  }\n\n  initBackground() {\n    const options = this.container.actualOptions,\n          background = options.background,\n          element = this.element,\n          elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n    if (!elementStyle) {\n      return;\n    }\n\n    if (background.color) {\n      const color = rangeColorToRgb(background.color);\n      elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n\n  initPlugins() {\n    __classPrivateFieldSet(this, _Canvas_resizePlugins, [], \"f\");\n\n    for (const [, plugin] of this.container.plugins) {\n      if (plugin.resize) {\n        __classPrivateFieldGet(this, _Canvas_resizePlugins, \"f\").push(plugin);\n      }\n\n      if (plugin.particleFillColor || plugin.particleStrokeColor) {\n        __classPrivateFieldGet(this, _Canvas_colorPlugins, \"f\").push(plugin);\n      }\n    }\n  }\n\n  initUpdaters() {\n    __classPrivateFieldSet(this, _Canvas_preDrawUpdaters, [], \"f\");\n\n    __classPrivateFieldSet(this, _Canvas_postDrawUpdaters, [], \"f\");\n\n    for (const updater of this.container.particles.updaters) {\n      if (updater.afterDraw) {\n        __classPrivateFieldGet(this, _Canvas_postDrawUpdaters, \"f\").push(updater);\n      }\n\n      if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n        __classPrivateFieldGet(this, _Canvas_preDrawUpdaters, \"f\").push(updater);\n      }\n    }\n  }\n\n  loadCanvas(canvas) {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    this.generatedCanvas = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this.generatedCanvas;\n    this.element = canvas;\n    this.originalStyle = deepExtend({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n\n    __classPrivateFieldSet(this, _Canvas_context, this.element.getContext(\"2d\"), \"f\");\n\n    this.container.retina.init();\n    this.initBackground();\n  }\n\n  paint() {\n    const options = this.container.actualOptions;\n    this.draw(ctx => {\n      if (options.backgroundMask.enable && options.backgroundMask.cover) {\n        clear(ctx, this.size);\n        this.paintBase(this.coverColorStyle);\n      } else {\n        this.paintBase();\n      }\n    });\n  }\n\n  resize() {\n    if (!this.element) {\n      return;\n    }\n\n    const container = this.container,\n          pxRatio = container.retina.pixelRatio,\n          size = container.canvas.size,\n          newSize = {\n      width: this.element.offsetWidth * pxRatio,\n      height: this.element.offsetHeight * pxRatio\n    };\n\n    if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n      return;\n    }\n\n    const oldSize = Object.assign({}, size);\n    this.element.width = size.width = this.element.offsetWidth * pxRatio;\n    this.element.height = size.height = this.element.offsetHeight * pxRatio;\n\n    if (this.container.started) {\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n  }\n\n  async windowResize() {\n    if (!this.element) {\n      return;\n    }\n\n    this.resize();\n    const container = this.container,\n          needsRefresh = container.updateActualOptions();\n    container.particles.setDensity();\n    this.applyResizePlugins();\n\n    if (needsRefresh) {\n      await container.refresh();\n    }\n  }\n\n  applyPostDrawUpdaters(particle) {\n    var _a;\n\n    for (const updater of __classPrivateFieldGet(this, _Canvas_postDrawUpdaters, \"f\")) {\n      (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n    }\n  }\n\n  applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n    var _a;\n\n    for (const updater of __classPrivateFieldGet(this, _Canvas_preDrawUpdaters, \"f\")) {\n      if (updater.getColorStyles) {\n        const {\n          fill,\n          stroke\n        } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n\n        if (fill) {\n          colorStyles.fill = fill;\n        }\n\n        if (stroke) {\n          colorStyles.stroke = stroke;\n        }\n      }\n\n      if (updater.getTransformValues) {\n        const updaterTransform = updater.getTransformValues(particle);\n\n        for (const key in updaterTransform) {\n          setTransformValue(transform, updaterTransform, key);\n        }\n      }\n\n      (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n    }\n  }\n\n  applyResizePlugins() {\n    var _a;\n\n    for (const plugin of __classPrivateFieldGet(this, _Canvas_resizePlugins, \"f\")) {\n      (_a = plugin.resize) === null || _a === void 0 ? void 0 : _a.call(plugin);\n    }\n  }\n\n  getPluginParticleColors(particle) {\n    let fColor, sColor;\n\n    for (const plugin of __classPrivateFieldGet(this, _Canvas_colorPlugins, \"f\")) {\n      if (!fColor && plugin.particleFillColor) {\n        fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n      }\n\n      if (!sColor && plugin.particleStrokeColor) {\n        sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n      }\n\n      if (fColor && sColor) {\n        break;\n      }\n    }\n\n    return [fColor, sColor];\n  }\n\n  initCover() {\n    const options = this.container.actualOptions,\n          cover = options.backgroundMask.cover,\n          color = cover.color,\n          coverRgb = rangeColorToRgb(color);\n\n    if (coverRgb) {\n      const coverColor = {\n        r: coverRgb.r,\n        g: coverRgb.g,\n        b: coverRgb.b,\n        a: cover.opacity\n      };\n      this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n    }\n  }\n\n  initStyle() {\n    const element = this.element,\n          options = this.container.actualOptions;\n\n    if (!element) {\n      return;\n    }\n\n    if (options.fullScreen.enable) {\n      this.originalStyle = deepExtend({}, element.style);\n      element.style.setProperty(\"position\", \"fixed\", \"important\");\n      element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n      element.style.setProperty(\"top\", \"0\", \"important\");\n      element.style.setProperty(\"left\", \"0\", \"important\");\n      element.style.setProperty(\"width\", \"100%\", \"important\");\n      element.style.setProperty(\"height\", \"100%\", \"important\");\n    } else {\n      this.resetOriginalStyle();\n    }\n\n    for (const key in options.style) {\n      if (!key || !options.style) {\n        continue;\n      }\n\n      const value = options.style[key];\n\n      if (!value) {\n        continue;\n      }\n\n      element.style.setProperty(key, value, \"important\");\n    }\n  }\n\n  initTrail() {\n    const options = this.container.actualOptions,\n          trail = options.particles.move.trail,\n          fillColor = rangeColorToRgb(trail.fillColor);\n\n    if (fillColor) {\n      const trail = options.particles.move.trail;\n      this.trailFillColor = {\n        r: fillColor.r,\n        g: fillColor.g,\n        b: fillColor.b,\n        a: 1 / trail.length\n      };\n    }\n  }\n\n  paintBase(baseColor) {\n    this.draw(ctx => {\n      paintBase(ctx, this.size, baseColor);\n    });\n  }\n\n  resetOriginalStyle() {\n    const element = this.element,\n          originalStyle = this.originalStyle;\n\n    if (element && originalStyle) {\n      element.style.position = originalStyle.position;\n      element.style.zIndex = originalStyle.zIndex;\n      element.style.top = originalStyle.top;\n      element.style.left = originalStyle.left;\n      element.style.width = originalStyle.width;\n      element.style.height = originalStyle.height;\n    }\n  }\n\n}\n_Canvas_colorPlugins = new WeakMap(), _Canvas_context = new WeakMap(), _Canvas_postDrawUpdaters = new WeakMap(), _Canvas_preDrawUpdaters = new WeakMap(), _Canvas_resizePlugins = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Canvas_colorPlugins","_Canvas_context","_Canvas_postDrawUpdaters","_Canvas_preDrawUpdaters","_Canvas_resizePlugins","clear","drawParticle","drawParticlePlugin","drawPlugin","paintBase","getStyleFromHsl","getStyleFromRgb","rangeColorToHsl","rangeColorToRgb","deepExtend","generatedAttribute","setTransformValue","factor","newFactor","key","_a","newValue","undefined","Canvas","constructor","container","size","height","width","generatedCanvas","options","actualOptions","trail","particles","move","backgroundMask","enable","paint","length","trailFillColor","draw","ctx","destroy","element","remove","resetOriginalStyle","cb","particle","delta","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","fColor","sColor","getPluginParticleColors","_b","_c","_d","_e","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","opacity","bubble","strokeOpacity","stroke","zOpacity","zStrokeOpacity","transform","colorStyles","fill","applyPreDrawUpdaters","context","composite","sizeRate","shadow","applyPostDrawUpdaters","plugin","init","resize","initStyle","initCover","initTrail","initBackground","initUpdaters","initPlugins","background","elementStyle","style","color","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","plugins","push","particleFillColor","particleStrokeColor","updater","updaters","afterDraw","getColorStyles","getTransformValues","beforeDraw","loadCanvas","canvas","dataset","originalStyle","offsetHeight","offsetWidth","getContext","retina","cover","coverColorStyle","pxRatio","pixelRatio","newSize","oldSize","Object","assign","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","applyResizePlugins","refresh","updaterTransform","coverRgb","coverColor","r","g","b","a","fullScreen","setProperty","toString","fillColor","baseColor","top","left","WeakMap"],"sources":["/home/brayanmezac/Descargas/drones-react/node_modules/tsparticles-engine/esm/Core/Canvas.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Canvas_colorPlugins, _Canvas_context, _Canvas_postDrawUpdaters, _Canvas_preDrawUpdaters, _Canvas_resizePlugins;\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { deepExtend } from \"../Utils/Utils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        _Canvas_colorPlugins.set(this, void 0);\n        _Canvas_context.set(this, void 0);\n        _Canvas_postDrawUpdaters.set(this, void 0);\n        _Canvas_preDrawUpdaters.set(this, void 0);\n        _Canvas_resizePlugins.set(this, void 0);\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        __classPrivateFieldSet(this, _Canvas_context, null, \"f\");\n        this.generatedCanvas = false;\n        __classPrivateFieldSet(this, _Canvas_preDrawUpdaters, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_postDrawUpdaters, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_resizePlugins, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_colorPlugins, [], \"f\");\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        else {\n            this.resetOriginalStyle();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n        __classPrivateFieldSet(this, _Canvas_preDrawUpdaters, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_postDrawUpdaters, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_resizePlugins, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_colorPlugins, [], \"f\");\n    }\n    draw(cb) {\n        if (!__classPrivateFieldGet(this, _Canvas_context, \"f\")) {\n            return;\n        }\n        return cb(__classPrivateFieldGet(this, _Canvas_context, \"f\"));\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d, _e;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_e = (_d = particle.stroke) === null || _d === void 0 ? void 0 : _d.opacity) !== null && _e !== void 0 ? _e : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this.applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this.applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        __classPrivateFieldSet(this, _Canvas_resizePlugins, [], \"f\");\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                __classPrivateFieldGet(this, _Canvas_resizePlugins, \"f\").push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                __classPrivateFieldGet(this, _Canvas_colorPlugins, \"f\").push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        __classPrivateFieldSet(this, _Canvas_preDrawUpdaters, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_postDrawUpdaters, [], \"f\");\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                __classPrivateFieldGet(this, _Canvas_postDrawUpdaters, \"f\").push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                __classPrivateFieldGet(this, _Canvas_preDrawUpdaters, \"f\").push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        __classPrivateFieldSet(this, _Canvas_context, this.element.getContext(\"2d\"), \"f\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this.paintBase(this.coverColorStyle);\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this.applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of __classPrivateFieldGet(this, _Canvas_postDrawUpdaters, \"f\")) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of __classPrivateFieldGet(this, _Canvas_preDrawUpdaters, \"f\")) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    applyResizePlugins() {\n        var _a;\n        for (const plugin of __classPrivateFieldGet(this, _Canvas_resizePlugins, \"f\")) {\n            (_a = plugin.resize) === null || _a === void 0 ? void 0 : _a.call(plugin);\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of __classPrivateFieldGet(this, _Canvas_colorPlugins, \"f\")) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (options.fullScreen.enable) {\n            this.originalStyle = deepExtend({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else {\n            this.resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = rangeColorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    resetOriginalStyle() {\n        const element = this.element, originalStyle = this.originalStyle;\n        if (element && originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n    }\n}\n_Canvas_colorPlugins = new WeakMap(), _Canvas_context = new WeakMap(), _Canvas_postDrawUpdaters = new WeakMap(), _Canvas_preDrawUpdaters = new WeakMap(), _Canvas_resizePlugins = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}