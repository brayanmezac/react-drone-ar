{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Particle_engine;\n\nimport { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromArray } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Shape } from \"../Options/Classes/Particles/Shape/Shape\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\n\nconst fixOutMode = data => {\n  if (!(isInArray(data.outMode, data.checkModes) || isInArray(data.outMode, data.checkModes))) {\n    return;\n  }\n\n  if (data.coord > data.maxCoord - data.radius * 2) {\n    data.setCb(-data.radius);\n  } else if (data.coord < data.radius * 2) {\n    data.setCb(data.radius);\n  }\n};\n\nexport class Particle {\n  constructor(engine, id, container, position, overrideOptions, group) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n    this.id = id;\n    this.container = container;\n    this.group = group;\n\n    _Particle_engine.set(this, void 0);\n\n    __classPrivateFieldSet(this, _Particle_engine, engine, \"f\");\n\n    this.fill = true;\n    this.close = true;\n    this.lastPathTime = 0;\n    this.destroyed = false;\n    this.unbreakable = false;\n    this.splitCount = 0;\n    this.rotation = 0;\n    this.misplaced = false;\n    this.retina = {\n      maxDistance: {}\n    };\n    this.outType = \"normal\";\n    this.ignoresResizeRatio = true;\n    const pxRatio = container.retina.pixelRatio,\n          mainOptions = container.actualOptions,\n          particlesOptions = loadParticlesOptions(__classPrivateFieldGet(this, _Particle_engine, \"f\"), container, mainOptions.particles);\n    const shapeType = particlesOptions.shape.type,\n          reduceDuplicates = particlesOptions.reduceDuplicates;\n    this.shape = shapeType instanceof Array ? itemFromArray(shapeType, this.id, reduceDuplicates) : shapeType;\n\n    if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n      if (overrideOptions.shape.type) {\n        const overrideShapeType = overrideOptions.shape.type;\n        this.shape = overrideShapeType instanceof Array ? itemFromArray(overrideShapeType, this.id, reduceDuplicates) : overrideShapeType;\n      }\n\n      const shapeOptions = new Shape();\n      shapeOptions.load(overrideOptions.shape);\n\n      if (this.shape) {\n        this.shapeData = this.loadShapeData(shapeOptions, reduceDuplicates);\n      }\n    } else {\n      this.shapeData = this.loadShapeData(particlesOptions.shape, reduceDuplicates);\n    }\n\n    particlesOptions.load(overrideOptions);\n    particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n    this.interactivity = new Interactivity(engine, container);\n    this.interactivity.load(container.actualOptions.interactivity);\n    this.interactivity.load(particlesOptions.interactivity);\n    this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n    this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n    this.options = particlesOptions;\n    const pathOptions = this.options.move.path;\n    this.pathDelay = getValue(pathOptions.delay) * 1000;\n\n    if (pathOptions.generator) {\n      this.pathGenerator = __classPrivateFieldGet(this, _Particle_engine, \"f\").plugins.getPathGenerator(pathOptions.generator);\n\n      if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n        this.pathGenerator.init(container);\n      }\n    }\n\n    const zIndexValue = getRangeValue(this.options.zIndex.value);\n    container.retina.initParticle(this);\n    const sizeOptions = this.options.size,\n          sizeRange = sizeOptions.value,\n          sizeAnimation = sizeOptions.animation;\n    this.size = {\n      enable: sizeOptions.animation.enable,\n      value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n      max: getRangeMax(sizeRange) * pxRatio,\n      min: getRangeMin(sizeRange) * pxRatio,\n      loops: 0,\n      maxLoops: getRangeValue(sizeOptions.animation.count)\n    };\n\n    if (sizeAnimation.enable) {\n      this.size.status = 0;\n      this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n\n      switch (sizeAnimation.startValue) {\n        case \"min\":\n          this.size.value = this.size.min;\n          this.size.status = 0;\n          break;\n\n        case \"random\":\n          this.size.value = randomInRange(this.size) * pxRatio;\n          this.size.status = getRandom() >= 0.5 ? 0 : 1;\n          break;\n\n        case \"max\":\n        default:\n          this.size.value = this.size.max;\n          this.size.status = 1;\n          break;\n      }\n\n      this.size.velocity = ((_f = this.retina.sizeAnimationSpeed) !== null && _f !== void 0 ? _f : container.retina.sizeAnimationSpeed) / 100 * container.retina.reduceFactor;\n\n      if (!sizeAnimation.sync) {\n        this.size.velocity *= getRandom();\n      }\n    }\n\n    this.bubble = {\n      inRange: false\n    };\n    this.position = this.calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n    this.initialPosition = this.position.copy();\n    const canvasSize = container.canvas.size,\n          moveCenterPerc = this.options.move.center;\n    this.moveCenter = {\n      x: canvasSize.width * moveCenterPerc.x / 100,\n      y: canvasSize.height * moveCenterPerc.y / 100,\n      radius: this.options.move.center.radius\n    };\n    this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n\n    switch (this.options.move.direction) {\n      case \"inside\":\n        this.outType = \"inside\";\n        break;\n\n      case \"outside\":\n        this.outType = \"outside\";\n        break;\n    }\n\n    this.initialVelocity = this.calculateVelocity();\n    this.velocity = this.initialVelocity.copy();\n    this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n    this.offset = Vector.origin;\n    const particles = container.particles;\n    particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n    particles.lastZIndex = this.position.z;\n    this.zIndexFactor = this.position.z / container.zLayers;\n    this.sides = 24;\n    let drawer = container.drawers.get(this.shape);\n\n    if (!drawer) {\n      drawer = __classPrivateFieldGet(this, _Particle_engine, \"f\").plugins.getShapeDrawer(this.shape);\n\n      if (drawer) {\n        container.drawers.set(this.shape, drawer);\n      }\n    }\n\n    if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n      drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n    }\n\n    const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n\n    if (sideCountFunc) {\n      this.sides = sideCountFunc(this);\n    }\n\n    this.spawning = false;\n    this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n\n    for (const updater of container.particles.updaters) {\n      (_g = updater.init) === null || _g === void 0 ? void 0 : _g.call(updater, this);\n    }\n\n    for (const mover of container.particles.movers) {\n      (_h = mover.init) === null || _h === void 0 ? void 0 : _h.call(mover, this);\n    }\n\n    if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n      drawer.particleInit(container, this);\n    }\n\n    for (const [, plugin] of container.plugins) {\n      (_j = plugin.particleCreated) === null || _j === void 0 ? void 0 : _j.call(plugin, this);\n    }\n  }\n\n  destroy(override) {\n    if (this.unbreakable || this.destroyed) {\n      return;\n    }\n\n    this.destroyed = true;\n    this.bubble.inRange = false;\n\n    for (const [, plugin] of this.container.plugins) {\n      if (plugin.particleDestroyed) {\n        plugin.particleDestroyed(this, override);\n      }\n    }\n\n    if (override) {\n      return;\n    }\n\n    const destroyOptions = this.options.destroy;\n\n    if (destroyOptions.mode === \"split\") {\n      this.split();\n    }\n  }\n\n  draw(delta) {\n    const container = this.container;\n\n    for (const [, plugin] of container.plugins) {\n      container.canvas.drawParticlePlugin(plugin, this, delta);\n    }\n\n    container.canvas.drawParticle(this, delta);\n  }\n\n  getFillColor() {\n    var _a, _b;\n\n    const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color);\n\n    if (color && this.roll && (this.backColor || this.roll.alter)) {\n      const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1,\n            backSum = this.roll.horizontal ? Math.PI / 2 : 0,\n            rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n\n      if (rolled) {\n        if (this.backColor) {\n          return this.backColor;\n        }\n\n        if (this.roll.alter) {\n          return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n        }\n      }\n    }\n\n    return color;\n  }\n\n  getMass() {\n    return this.getRadius() ** 2 * Math.PI / 2;\n  }\n\n  getPosition() {\n    return {\n      x: this.position.x + this.offset.x,\n      y: this.position.y + this.offset.y,\n      z: this.position.z\n    };\n  }\n\n  getRadius() {\n    var _a;\n\n    return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n  }\n\n  getStrokeColor() {\n    var _a, _b;\n\n    return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n  }\n\n  isInsideCanvas() {\n    const radius = this.getRadius(),\n          canvasSize = this.container.canvas.size;\n    return this.position.x >= -radius && this.position.y >= -radius && this.position.y <= canvasSize.height + radius && this.position.x <= canvasSize.width + radius;\n  }\n\n  isVisible() {\n    return !this.destroyed && !this.spawning && this.isInsideCanvas();\n  }\n\n  reset() {\n    if (this.opacity) {\n      this.opacity.loops = 0;\n    }\n\n    this.size.loops = 0;\n  }\n\n  calcPosition(container, position, zIndex) {\n    let tryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    var _a, _b, _c, _d;\n\n    for (const [, plugin] of container.plugins) {\n      const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n\n      if (pluginPos !== undefined) {\n        return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n      }\n    }\n\n    const canvasSize = container.canvas.size,\n          exactPosition = calcExactPositionOrRandomFromSize({\n      size: canvasSize,\n      position: position\n    }),\n          pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex),\n          radius = this.getRadius(),\n          outModes = this.options.move.outModes,\n          fixHorizontal = outMode => {\n      fixOutMode({\n        outMode,\n        checkModes: [\"bounce\", \"bounce-horizontal\"],\n        coord: pos.x,\n        maxCoord: container.canvas.size.width,\n        setCb: value => pos.x += value,\n        radius\n      });\n    },\n          fixVertical = outMode => {\n      fixOutMode({\n        outMode,\n        checkModes: [\"bounce\", \"bounce-vertical\"],\n        coord: pos.y,\n        maxCoord: container.canvas.size.height,\n        setCb: value => pos.y += value,\n        radius\n      });\n    };\n\n    fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n    fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n    fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n    fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n\n    if (this.checkOverlap(pos, tryCount)) {\n      return this.calcPosition(container, undefined, zIndex, tryCount + 1);\n    }\n\n    return pos;\n  }\n\n  calculateVelocity() {\n    const baseVelocity = getParticleBaseVelocity(this.direction);\n    const res = baseVelocity.copy();\n    const moveOptions = this.options.move;\n\n    if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n      return res;\n    }\n\n    const rad = Math.PI / 180 * getRangeValue(moveOptions.angle.value);\n    const radOffset = Math.PI / 180 * getRangeValue(moveOptions.angle.offset);\n    const range = {\n      left: radOffset - rad / 2,\n      right: radOffset + rad / 2\n    };\n\n    if (!moveOptions.straight) {\n      res.angle += randomInRange(setRangeValue(range.left, range.right));\n    }\n\n    if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n      res.length *= getRandom();\n    }\n\n    return res;\n  }\n\n  checkOverlap(pos) {\n    let tryCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const collisionsOptions = this.options.collisions,\n          radius = this.getRadius();\n\n    if (!collisionsOptions.enable) {\n      return false;\n    }\n\n    const overlapOptions = collisionsOptions.overlap;\n\n    if (overlapOptions.enable) {\n      return false;\n    }\n\n    const retries = overlapOptions.retries;\n\n    if (retries >= 0 && tryCount > retries) {\n      throw new Error(\"Particle is overlapping and can't be placed\");\n    }\n\n    let overlaps = false;\n\n    for (const particle of this.container.particles.array) {\n      if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n        overlaps = true;\n        break;\n      }\n    }\n\n    return overlaps;\n  }\n\n  loadShapeData(shapeOptions, reduceDuplicates) {\n    const shapeData = shapeOptions.options[this.shape];\n\n    if (shapeData) {\n      return deepExtend({}, shapeData instanceof Array ? itemFromArray(shapeData, this.id, reduceDuplicates) : shapeData);\n    }\n  }\n\n  split() {\n    const splitOptions = this.options.destroy.split;\n\n    if (splitOptions.count >= 0 && this.splitCount++ > splitOptions.count) {\n      return;\n    }\n\n    const rate = getValue(splitOptions.rate),\n          particlesSplitOptions = splitOptions.particles instanceof Array ? itemFromArray(splitOptions.particles) : splitOptions.particles;\n\n    for (let i = 0; i < rate; i++) {\n      this.container.particles.addSplitParticle(this, particlesSplitOptions);\n    }\n  }\n\n}\n_Particle_engine = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Particle_engine","calcExactPositionOrRandomFromSize","clamp","getDistance","getParticleBaseVelocity","getParticleDirectionAngle","getRandom","getRangeMax","getRangeMin","getRangeValue","getValue","randomInRange","setRangeValue","deepExtend","isInArray","itemFromArray","getHslFromAnimation","rangeColorToRgb","Interactivity","Shape","Vector","Vector3d","alterHsl","loadParticlesOptions","fixOutMode","data","outMode","checkModes","coord","maxCoord","radius","setCb","Particle","constructor","engine","id","container","position","overrideOptions","group","_a","_b","_c","_d","_e","_f","_g","_h","_j","fill","close","lastPathTime","destroyed","unbreakable","splitCount","rotation","misplaced","retina","maxDistance","outType","ignoresResizeRatio","pxRatio","pixelRatio","mainOptions","actualOptions","particlesOptions","particles","shapeType","shape","type","reduceDuplicates","Array","overrideShapeType","shapeOptions","load","shapeData","loadShapeData","interactivity","options","pathOptions","move","path","pathDelay","delay","generator","pathGenerator","plugins","getPathGenerator","addPath","init","zIndexValue","zIndex","initParticle","sizeOptions","size","sizeRange","sizeAnimation","animation","enable","max","min","loops","maxLoops","count","status","decay","startValue","velocity","sizeAnimationSpeed","reduceFactor","sync","bubble","inRange","calcPosition","zLayers","initialPosition","copy","canvasSize","canvas","moveCenterPerc","center","moveCenter","x","width","y","height","direction","initialVelocity","calculateVelocity","moveDecay","offset","origin","needsSort","lastZIndex","z","zIndexFactor","sides","drawer","drawers","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","spawning","shadowColor","shadow","color","updater","updaters","mover","movers","particleInit","plugin","particleCreated","destroy","override","particleDestroyed","destroyOptions","mode","split","draw","delta","drawParticlePlugin","drawParticle","getFillColor","roll","backColor","alter","backFactor","horizontal","vertical","backSum","Math","PI","rolled","floor","angle","getMass","getRadius","getPosition","getStrokeColor","strokeColor","isInsideCanvas","isVisible","reset","opacity","tryCount","pluginPos","particlePosition","undefined","create","exactPosition","pos","outModes","fixHorizontal","fixVertical","left","default","right","top","bottom","checkOverlap","baseVelocity","res","moveOptions","rad","radOffset","range","straight","random","speed","length","collisionsOptions","collisions","overlapOptions","overlap","retries","Error","overlaps","particle","array","splitOptions","rate","particlesSplitOptions","i","addSplitParticle","WeakMap"],"sources":["/home/brayanmezac/Descargas/drones-react/node_modules/tsparticles-engine/esm/Core/Particle.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particle_engine;\nimport { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromArray } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Shape } from \"../Options/Classes/Particles/Shape/Shape\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!(isInArray(data.outMode, data.checkModes) || isInArray(data.outMode, data.checkModes))) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        this.id = id;\n        this.container = container;\n        this.group = group;\n        _Particle_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particle_engine, engine, \"f\");\n        this.fill = true;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.splitCount = 0;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(__classPrivateFieldGet(this, _Particle_engine, \"f\"), container, mainOptions.particles);\n        const shapeType = particlesOptions.shape.type, reduceDuplicates = particlesOptions.reduceDuplicates;\n        this.shape = shapeType instanceof Array ? itemFromArray(shapeType, this.id, reduceDuplicates) : shapeType;\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape =\n                    overrideShapeType instanceof Array\n                        ? itemFromArray(overrideShapeType, this.id, reduceDuplicates)\n                        : overrideShapeType;\n            }\n            const shapeOptions = new Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                this.shapeData = this.loadShapeData(shapeOptions, reduceDuplicates);\n            }\n        }\n        else {\n            this.shapeData = this.loadShapeData(particlesOptions.shape, reduceDuplicates);\n        }\n        particlesOptions.load(overrideOptions);\n        particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n        this.interactivity = new Interactivity(engine, container);\n        this.interactivity.load(container.actualOptions.interactivity);\n        this.interactivity.load(particlesOptions.interactivity);\n        this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n        this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = __classPrivateFieldGet(this, _Particle_engine, \"f\").plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value, sizeAnimation = sizeOptions.animation;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n            max: getRangeMax(sizeRange) * pxRatio,\n            min: getRangeMin(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: getRangeValue(sizeOptions.animation.count),\n        };\n        if (sizeAnimation.enable) {\n            this.size.status = 0;\n            this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = 0;\n                    break;\n                case \"random\":\n                    this.size.value = randomInRange(this.size) * pxRatio;\n                    this.size.status = getRandom() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = 1;\n                    break;\n            }\n            this.size.velocity =\n                (((_f = this.retina.sizeAnimationSpeed) !== null && _f !== void 0 ? _f : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= getRandom();\n            }\n        }\n        this.bubble = {\n            inRange: false,\n        };\n        this.position = this.calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        const canvasSize = container.canvas.size, moveCenterPerc = this.options.move.center;\n        this.moveCenter = {\n            x: (canvasSize.width * moveCenterPerc.x) / 100,\n            y: (canvasSize.height * moveCenterPerc.y) / 100,\n            radius: this.options.move.center.radius,\n        };\n        this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n        switch (this.options.move.direction) {\n            case \"inside\":\n                this.outType = \"inside\";\n                break;\n            case \"outside\":\n                this.outType = \"outside\";\n                break;\n        }\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        this.offset = Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = __classPrivateFieldGet(this, _Particle_engine, \"f\").plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            (_g = updater.init) === null || _g === void 0 ? void 0 : _g.call(updater, this);\n        }\n        for (const mover of container.particles.movers) {\n            (_h = mover.init) === null || _h === void 0 ? void 0 : _h.call(mover, this);\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            (_j = plugin.particleCreated) === null || _j === void 0 ? void 0 : _j.call(plugin, this);\n        }\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        if (override) {\n            return;\n        }\n        const destroyOptions = this.options.destroy;\n        if (destroyOptions.mode === \"split\") {\n            this.split();\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        var _a, _b;\n        const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color);\n        if (color && this.roll && (this.backColor || this.roll.alter)) {\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (rolled) {\n                if (this.backColor) {\n                    return this.backColor;\n                }\n                if (this.roll.alter) {\n                    return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n                }\n            }\n        }\n        return color;\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        if (this.opacity) {\n            this.opacity.loops = 0;\n        }\n        this.size.loops = 0;\n    }\n    calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this.checkOverlap(pos, tryCount)) {\n            return this.calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    calculateVelocity() {\n        const baseVelocity = getParticleBaseVelocity(this.direction);\n        const res = baseVelocity.copy();\n        const moveOptions = this.options.move;\n        if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n            return res;\n        }\n        const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value);\n        const radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset);\n        const range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += randomInRange(setRangeValue(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= getRandom();\n        }\n        return res;\n    }\n    checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return deepExtend({}, shapeData instanceof Array ? itemFromArray(shapeData, this.id, reduceDuplicates) : shapeData);\n        }\n    }\n    split() {\n        const splitOptions = this.options.destroy.split;\n        if (splitOptions.count >= 0 && this.splitCount++ > splitOptions.count) {\n            return;\n        }\n        const rate = getValue(splitOptions.rate), particlesSplitOptions = splitOptions.particles instanceof Array\n            ? itemFromArray(splitOptions.particles)\n            : splitOptions.particles;\n        for (let i = 0; i < rate; i++) {\n            this.container.particles.addSplitParticle(this, particlesSplitOptions);\n        }\n    }\n}\n_Particle_engine = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}